<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.collavore.app.approvals.mapper.ApprovalsMapper">

	<!-- 템플릿 리스트 -->
	<select id="tempList" resultType="ApprovalstempVO">
		SELECT title
		,content
		,reg_date
		,eat_no
		FROM approvalstemp
		ORDER BY eat_no
	</select>

	<!-- 템플릿 상세 -->
	<select id="readTemp" resultType="ApprovalstempVO"
		parameterType="int">
		SELECT *
		FROM approvalstemp
		WHERE eat_no = #{eatNo}
	</select>
	<!-- -->

	<!-- 템플릿 생성 -->
	<insert id="createApprsTemp" parameterType="ApprovalstempVO">
		<selectKey keyProperty="eatNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(eat_no),0) + 1
			FROM approvalstemp
		</selectKey>
		INSERT INTO approvalstemp (
		eat_no
		,title
		,content
		)
		VALUES (
		#{eatNo}
		,#{title}
		,#{content}
		)
	</insert>
	<!-- -->

	<!-- 템플릿 삭제 -->
	<delete id="deleteTemp" parameterType="int">
		DELETE approvalstemp
		WHERE
		eat_no = #{eatNo}
	</delete>
	<!-- -->

	<!-- 템플릿 수정 -->
	<update id="updateTemp" parameterType="ApprovalstempVO">
		UPDATE approvalstemp
		SET
		title = #{title}
		,content = #{content}
		WHERE eat_no = #{eatNo}
	</update>
	<!-- -->

	<!-- 전자결재를 생성하는 기능 -->
	<!-- approvals테이블에 넣기 -->
	<insert id="createApprsEa" parameterType="ApprovalsVO">
		<selectKey keyProperty="eaNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(approvals.ea_no),0) + 1
			FROM approvals
		</selectKey>
		INSERT INTO approvals(
		approvals.ea_no
		,title
		,eat_no
		,approvals.reg_date
		,content
		,emp_no
		)
		VALUES (
		#{eaNo}
		,#{title}
		,#{eatNo}
		,sysdate
		,#{content}
		,#{drafterEmpNo}
		)
	</insert>
	<!-- -->

	<!-- approvers테이블에 넣기 -->
	<insert id="createApprsEar" parameterType="ApprovalsVO">
		<selectKey keyProperty="earNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(ear_no), 0) + 1 
			FROM approvers
		</selectKey>
		INSERT ALL
		<foreach index="idx" collection="approvers" item="approvers"
			separator=" ">
			<if
				test="
					  approvers.empNo != null and 
				      approvers.empNo != ''
				     ">
				INTO approvers (
				ear_no
				,ea_no
				,emp_no
				,sort
				)
				VALUES (
				 FIND_APPROVERS_SEQ()
				,#{approvers.eaNo}
				,#{approvers.empNo}
				,#{approvers.sort}
				)
			</if>
		</foreach>
		SELECT * FROM dual
	</insert>
	<!-- -->

	<!-- 나의 진행 중인 전자결재 목록 조회 -->
	<select id="myApprList" parameterType="ApprovalsVO"
		resultType="ApprovalsVO">
		SELECT DISTINCT a.ea_no
				,a.title
				,e.name AS "drafterName"
				,a.reg_date
				,a.emp_no AS "drafterEmpNo"
				,a.status AS "approvalStatus"
				,a.emp_no AS "approverEmpNo"
		<if test="compDate != null or compDate != ''">
				, a.comp_date
		</if>
		FROM approvals a
		INNER JOIN employees e 
			ON a.emp_no = e.emp_no
		LEFT JOIN approvers ar
			ON a.ea_no = ar.ea_no
		WHERE (a.emp_no = #{userEmpNo} OR ar.emp_no = #{userEmpNo})
		<choose>
			<when test="approvalStatus == 'a1'">
				AND a.status = 'a1'
			</when>
			<when test="approvalStatus == 'a2'">
				AND a.status = 'a2'
			</when>
			<when test="approvalStatus == 'a3'">
				AND a.status = 'a3'
			</when>
			<when test="approvalStatus == 'a4'">
				AND a.status = 'a4'
			</when>
			<when test="approvalStatus == 'a5'">
			</when>
		</choose>
		ORDER BY a.reg_date
	</select>
	<!-- -->

	<!-- 문서함 -->
	<select id="approveList" parameterType="ApprovalsVO"
		resultType="ApprovalsVO">
		SELECT DISTINCT a.ea_no
						,a.title
						,e.name as "drafterName"
						,a.reg_date
						,a.emp_no as "drafterEmpNo"
						,a.status as "approvalStatus"
		<if test="compDate != null || compDate != ''">
			,a.comp_date
		</if>
		FROM approvals a
		INNER JOIN approvers ar
			ON a.ea_no = ar.ea_no
		INNER JOIN employees e
				ON a.emp_no = e.emp_no
		<choose>
			<when test="listStatus == 'all'">
				WHERE a.status IN ('a3','a4')
				AND (a.emp_no = #{userEmpNo} OR ar.emp_no = #{userEmpNo})
			</when>
			<when test="listStatus == 'drafted'">
				WHERE a.status IN ('a3','a4')
				AND (a.emp_no = #{userEmpNo})
			</when>
			<when test="listStatus == 'approved'">
				WHERE a.status IN ('a3','a4')
				AND (ar.emp_no = #{userEmpNo})
			</when>
			<when test="listStatus == 'denied'">
				WHERE a.status IN ('a4')
   				AND (a.emp_no = #{userEmpNo} OR ar.emp_no = #{userEmpNo})
			</when>
		</choose>
		ORDER BY a.comp_date
	</select>
	<!-- -->

	<!-- 전자결재 상세 조회 -->
	<select id="readApproval" parameterType="Integer"
		resultType="ApprovalsVO">
		SELECT
				a.title
				,a.content
				,a.reg_date
				,a.comp_date
				,a.emp_no as "drafterEmpNo"
				,e.name as "drafterName"
				,a.status as "approvalStatus"
				,a.ea_no
				,a.eat_no
		FROM approvals a LEFT JOIN employees e
			ON a.emp_no = e.emp_no
		WHERE
		a.ea_no = #{eaNo}
	</select>
	<!-- -->

	<!-- 결재자 상세 조회 -->
	<select id="readApprovers" parameterType="Integer"
		resultType="map">
		SELECT
				r.status as "approverStatus"
		     	,e.name as "approverName"
				,e.emp_no as "approverEmpNo"
				,p.name as "positionTitle"
				,r.sort as "approverSort"
				,r.ear_no as "earNumber"
				,r.proc_date
		FROM approvals a 
		JOIN approvers r
			ON a.ea_no = r.ea_no
		JOIN employees e
			ON r.emp_no = e.emp_no
		JOIN positions P
			ON e.posi_no = p.posi_no
		WHERE a.ea_no = #{eaNo}
		ORDER BY r.sort
	</select>
	<!-- -->

	<!-- 결재하기 -->
	<update id="updateApprStatus" statementType="CALLABLE">
		{ CALL
		appr_status_update(#{earNo, mode=IN}, #{approverStatus, mode=IN})
		}
	</update>
	<!-- -->

	<!-- 전결수정 -->
	<update id="updateApproval" parameterType="ApprovalsVO">
		update approvals
		set content = #{content}
			,title = #{title}
		WHERE ea_no = #{eaNo}
	</update>
	<select id="approvalsList" parameterType="Integer">
		select *
		from approvers
		where ea_no = #{eaNo}
	</select>
	<!--  -->
	
	<!-- 전자결재 삭제 -->
	<select id="deleteApproval" statementType="CALLABLE"
		resultType="Integer">
		{call DELETE_EANO(#{eaNo}, #{resultCode, mode=OUT,
		jdbcType=INTEGER})}
	</select>
	<!-- -->

	<!-- 인사 테이블 조회 -->
	<select id="employees" parameterType="map" resultType="HrmVO">
		SELECT
				 p.posi_no
				,e.name as "empName"
				,p.name as "posiName"
				,e.emp_no as "empNo"
				,d.name as "deptName"
		FROM employees e JOIN positions p
				ON e.posi_no = p.posi_no
		JOIN departments d
				ON e.dept_no = d.dept_no
	<![CDATA[
		WHERE e.emp_no <> #{userEmpNo} and d.dept_no = #{deptNo}
    ]]>
		ORDER by p.posi_no
	</select>
	<!-- -->
	
	<!-- 부서 테이블 조회  -->
	<select id="depts" resultType="HrmVO" parameterType="int">
		SELECT dept_no
			   ,name as "deptName"
		FROM departments
        ORDER BY dept_no
	</select>
	<!--  -->
	
	<!-- 삭제 -->
	<delete id="deleteApprover" parameterType="int">
		DELETE FROM approvers
		WHERE ea_no = #{eaNo}
	</delete>
	<!--  -->
	
</mapper>
<!-- 3번째 -->